version: "2.4" 

services:
  redis:
    restart: always
    image: redis:alpine
    container_name: gitlab_redis
    networks:
      - gitlab
    labels:
      - "traefik.enable=false"

  gitlab:
    image: gitlab/gitlab-ce:12.3.2-ce.0
    container_name: gitlab_server
    restart: always
    environment:
      TZ: America/Bogota
      GITLAB_OMNIBUS_CONFIG: |
        external_url '${SCHEME}://${EXTERNAL_URL}'
        # Redis
        redis['enable'] = ${redis_enable}
        gitlab_rails['redis_host'] = 'redis'
        gitlab_rails['redis_port'] = '6379'
        # Mail
        gitlab_rails['smtp_enable'] = ${smtp_enable}
        gitlab_rails['smtp_address'] = "smtp.${domain_mailer}"
        gitlab_rails['smtp_domain'] = "smtp.${domain_mailer}"
        gitlab_rails['smtp_user_name'] = ${smtp_user_name}
        gitlab_rails['smtp_password'] = ${smtp_password}
        gitlab_rails['smtp_port'] = ${smtp_port}
        gitlab_rails['smtp_authentication'] = ${smtp_authentication}
        gitlab_rails['smtp_enable_starttls_auto'] = ${smtp_enable_starttls_auto}
        gitlab_rails['smtp_tls'] = ${smtp_tls}
        gitlab_rails['smtp_openssl_verify_mode'] = ${smtp_openssl_verify_mode} 
        gitlab_rails['gitlab_email_from'] = "webmaster@${domain_mailer}"
        gitlab_rails['gitlab_email_reply_to'] = "noreply@${domain_mailer}"
        #
        # Docker registry
        #
        registry_external_url '${SCHEME}://${REGISTRY_HOSTNAME}'
        gitlab_rails['registry_enabled'] = true
        gitlab_rails['registry_issuer'] = "gitlab-issuer"
        # SSH
        gitlab_rails['gitlab_shell_ssh_port'] = '${SSH_PORT}'
        # Nginx
        nginx['listen_https'] = false
        nginx['listen_port'] = 80
        nginx['proxy_set_headers'] = {
                  "X-Forwarded-Proto" => "${SCHEME}",
                  "X-Forwarded-Ssl" => "${SSL}"
        }
        gitlab_rails['backup_keep_time'] = 86400
        gitlab_rails['backup_upload_connection'] = {
          'provider' => 'AWS',
          'region' => 'us-east-1',
          'aws_access_key_id' => ${ACCESS_KEY_ID},
          'aws_secret_access_key' => ${SECRET_ACCESS_KEY}
        }
        gitlab_rails['backup_upload_remote_directory'] = '${bucket_and_folder}'
        ## Default Theme
        gitlab_rails['gitlab_default_theme'] = 5
        gitlab_rails['time_zone'] = 'America/Bogota'

    volumes:
      - '.data/gitlab/config:/etc/gitlab'
      - '.data/gitlab/logs:/var/log/gitlab'
      - '.data/gitlab/data:/var/opt/gitlab'    
    networks:
      - gitlab
      - app
    mem_limit: 3000M      
    ports:
      - "${SSH_PORT}:22"
      - "10080:80"
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      - 'traefik.http.routers.gitlab.rule=Host(`${DOMAIN_NAME}`)'
      - "traefik.docker.network=app"

  gitlab-runner:
      image: gitlab/gitlab-runner:alpine
      container_name: gitlab_runner
      restart: always
      environment:
        - CI_SERVER_URL=${SCHEME}://${DOMAIN_NAME}/      
      networks:
        - gitlab
        - app      
      volumes:
        - './config/:/etc/gitlab-runner'
        - /var/run/docker.sock:/var/run/docker.sock:ro

  #
  # Create a docker registry
  # to host docker images
  #
  registry:
    restart: always
    image: registry:2
    hostname: ${REGISTRY_HOSTNAME}
    # I had problems with the health check. Sometimes it reported unhealthyness and therefore Traefik removed
    # the container, so I turned it off. Maybe it works by now.
    healthcheck:
      disable: true
    ports:
      - "5000:5000"      
    volumes:
      - '/srv/gitlab/data/gitlab-rails/shared/registry:/registry'
      #
      # First run this stack before
      # using letsencrypt certs !
      #
      #- '/root/docker-server-env/front-proxy/certs/REGISTRY_HOSTNAME/fullchain.pem:/certs/REGISTRY_HOSTNAME.crt:ro'
      #- '/root/docker-server-env/front-proxy/certs/REGISTRY_HOSTNAME/key.pem:/certs/REGISTRY_HOSTNAME.key:ro'
      #- '/srv/gitlab/data/registry/gitlab-registry.crt:/certs/gitlab-registry.crt:ro'
    environment:
      VIRTUAL_HOST: ${REGISTRY_HOSTNAME}
      # Tells nginx proxy to forward on port 5000
      # and get a clean and nice registry URL
      VIRTUAL_PORT: 5000
      # LETSENCRYPT_HOST: ${REGISTRY_HOSTNAME}
      # LETSENCRYPT_EMAIL: YOUREMAIL
      REGISTRY_LOG_LEVEL: info
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /registry
      # REGISTRY_AUTH: token
      # REGISTRY_AUTH_TOKEN_REALM: ${SCHEME}://${REGISTRY_HOSTNAME}/jwt/auth
      # REGISTRY_AUTH_TOKEN_SERVICE: container_registry
      # REGISTRY_AUTH_TOKEN_ISSUER: gitlab-issuer
      # REGISTRY_AUTH_TOKEN_AUTOREDIRECT: 'False'
      # REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE: /certs/gitlab-registry.crt
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
      REGISTRY_HTTP_SECRET: 'testing'
    networks:
      - gitlab
      - app       

networks:
    app:
        external:
            name: app
    gitlab: ~        
